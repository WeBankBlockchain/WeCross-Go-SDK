<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="baa19abb-3b5d-4795-8284-70500889a0be" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/fortests/WeCrossRPCModel_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/fortests/WeCrossRPCModel_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/logger/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/logger/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/resource/Resource.go" beforeDir="false" afterPath="$PROJECT_DIR$/resource/Resource.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/RemoteCall.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/RemoteCall.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/WeCrossRPC.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/WeCrossRPC.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/WeCrossRPCModel.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/WeCrossRPCModel.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/eles/account/UniversalAccount.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/eles/account/UniversalAccount.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/service/WeCrossRPCService.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/service/WeCrossRPCService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/service/WeCrossService.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/service/WeCrossService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/service/connections/connection.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/service/connections/connection.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/service/connections/connection_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/service/connections/connection_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/service/httpAsyncClient/httpAsyncClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/service/httpAsyncClient/httpAsyncClient.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/service/transactionContext/transactionContext.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/service/transactionContext/transactionContext.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/CallBack.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/CallBack.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/Request.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/Request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/Response.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/Response.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/Response_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/Response_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/request/UARequest.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/request/UARequest.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/response/AuthCodeReceipt.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/response/AuthCodeReceipt.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/response/RawXAResponse.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/response/RawXAResponse.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/response/RawXATransactionListResponse.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/response/RawXATransactionListResponse.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/response/TXReceipt.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/response/TXReceipt.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/response/UAReceipt.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/response/UAReceipt.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/types/response/responseTypes.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/types/response/responseTypes.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/utils/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/unmarshal.go" beforeDir="false" afterPath="$PROJECT_DIR$/utils/unmarshal.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/url.go" beforeDir="false" afterPath="$PROJECT_DIR$/utils/url.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.19" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2FbX9HCzZnxxl0pPglAQBM0d7qr" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "configurable..is.expanded": "false",
    "configurable.GoLibrariesConfigurable.is.expanded": "true",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "C:/Users/EXIA/Desktop/workspace/testWecrossGoSdk",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/rpc/eles/resources" />
      <recent name="$PROJECT_DIR$/rpc/types/response" />
      <recent name="C:\Users\EXIA\Documents\GitHub\WeCross-Go-SDK\fortests\tomldir" />
      <recent name="C:\Users\EXIA\Documents\GitHub\WeCross-Go-SDK\rpc\service\connections" />
      <recent name="$PROJECT_DIR$/common/cryptos" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestParseUAReceipt in WeCross-Go-SDK/rpc/types">
    <configuration name="TestCheckResourcePath in WeCross-Go-SDK/utils" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="WeCross-Go-SDK" />
      <working_directory value="$PROJECT_DIR$/utils" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="WeCross-Go-SDK/utils" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCheckResourcePath\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestLogSystemInstance in WeCross_Go_SDK/logger (1)" type="GoTestRunConfiguration" factoryName="Go Test" nameIsGenerated="true">
      <module name="WeCross-Go-SDK" />
      <working_directory value="$PROJECT_DIR$/logger" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="WeCross_Go_SDK/logger" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLogSystemInstance\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseResponse in WeCross-Go-SDK/rpc/types (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="WeCross-Go-SDK" />
      <working_directory value="$PROJECT_DIR$/rpc/types" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="WeCross-Go-SDK/rpc/types" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestParseResponse\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseResponse in WeCross-Go-SDK/rpc/types" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="WeCross-Go-SDK" />
      <working_directory value="$PROJECT_DIR$/rpc/types" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="WeCross-Go-SDK/rpc/types" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestParseResponse\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseUAReceipt in WeCross-Go-SDK/rpc/types" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="WeCross-Go-SDK" />
      <working_directory value="$PROJECT_DIR$/rpc/types" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="WeCross-Go-SDK/rpc/types" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestParseUAReceipt\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUniversalAccountParse in WeCross-Go-SDK/rpc/eles/account" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="WeCross-Go-SDK" />
      <working_directory value="$PROJECT_DIR$/rpc/eles/account" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="WeCross-Go-SDK/rpc/eles/account" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUniversalAccountParse\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestParseUAReceipt in WeCross-Go-SDK/rpc/types" />
        <item itemvalue="Go Test.TestUniversalAccountParse in WeCross-Go-SDK/rpc/eles/account" />
        <item itemvalue="Go Test.TestParseResponse in WeCross-Go-SDK/rpc/types (1)" />
        <item itemvalue="Go Test.TestParseResponse in WeCross-Go-SDK/rpc/types" />
        <item itemvalue="Go Test.TestCheckResourcePath in WeCross-Go-SDK/utils" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="true" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>