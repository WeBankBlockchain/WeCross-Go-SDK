package cryptos

import (
	"fmt"
	"testing"
)

var (
	testPub = "MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxpO0sDr8aAqdWh/ExsEmwAgQRdglFV2Pz++2ve4n9q83IYTqI1heHI+++wIhclW2Z//tTGJyRiT0cZ2dyiG+KQyO+6h5v4/E7fTrsLKGszaOMvfjl06tDNOI4e52VQ1Gi9zXCePpPnpYLMZY36aeDQi6qGCE9HtFD/Rr2RtByr/SLjdbT1C5Br0HDEGXC8Lr3ht3xkb/xHVR0Egq3ywbxEUEChKM49qj8TA63gFHAmbDy7rDtjtXE8AmhPEgRQ7Ou6IgCSDWnC2AokI/RwCGM+Bz0l+JXjV1iK2kkOlThT36R8CAaAQhwjp2WESeFylx7p99x1fWQ4o7pwpXIQhwZxmMPosqtP9hknxdMDnwQ4LDNwlOkJuwE87dj8ZlArlYGl5lkZBgpAi/RRP4Kbm8hiKVvAPurLtLUfHmn95CS0ZVR69y74PRFQPsioSdc43dPuEBhVwl8TyLsKxJOuR4MEPa2low4IBordvtwbY3Nx5nsjUwUgmg6LVMfKQXasrdr08F8Ixnri2w4olqu55KgfY48Nc7zAZytReUqS/dPVgJwvNqFlFmS98/ihbaj5QqAafZfSYIpgx2wBEbEVyLaNbmVDpZmHbugyZeLPsffCWsQ+OnvWyfJDGLx3ISYuQ+00Ij5SWMC9OUX3aVckRqsr4CbRlp1SIO6GE2Jl9C7eMCAwEAAQ=="
	expect  = "&{}"
)

func TestCreatePublicKey(t *testing.T) {
	pubKey, err := CreatePublicKey(testPub)
	if err != nil {
		t.Fatalf("fail in create public key: %v", err)
	}
	res := fmt.Sprintf("%v", pubKey)
	if res != expect {
		t.Fatalf("Got unexpected public key\n want: %s\n,got: %s\n", expect, res)
	}
}

func TestEncryptBase64(t *testing.T) {
	pubKey, err := CreatePublicKey(testPub)
	if err != nil {
		t.Fatalf("fail in create public key: %v", err)
	}
	encrypted, err := EncryptBase64([]byte("this is a test"), pubKey)
	if err != nil {
		t.Fatalf("fail in encrypt: %v", err)
	}
	t.Logf("got encrypted bytes: %s", encrypted)
}
